compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- est_poly(c(x[3],y[3]),c(x[4],y[4]),slopes[1:2],n=5)
pts
y
x
akima_data
y[1]
y[9]
slopes
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- est_poly(c(x[3],y[3]),c(x[4],y[4]),slopes[1:2],n=10)
pts
length(slopes)
length(x)
plot(x,y)
slopes
c(x[3],y[3])
c(x[4],y[4])
slopes[1:2]
est_poly(x_eg2, y_eg2, slopes_eg,n=5)
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- est_poly(c(x[3],y[3]),c(x[4],y[4]),slopes[1:2],n=5)
pts
x[4]
x[3]
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y)
points(pts)
?pch
example(pch)
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y,col="red",pch=20)
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y,col="red",pch=20)
plot(x,y,col="red",pch=20)
plot(x,y,col="red",pch=19)
plot(x,y,col="red",pch=19)
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- sapply(seq(3,n-2,by=1), function(i) est_poly(c(x[i],x[i+1]), c(y[i],y[i+1]), slopes[(i-2):(i-1)],n=5))
# est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y,col="red",pch=19)
pts
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- sapply(seq(3,n-3,by=1), function(i) est_poly(c(x[i],x[i+1]), c(y[i],y[i+1]), slopes[(i-2):(i-1)],n=5))
# est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y,col="red",pch=19)
pts
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- lapply(seq(3,n-3,by=1), function(i) est_poly(c(x[i],x[i+1]), c(y[i],y[i+1]), slopes[(i-2):(i-1)],n=5))
# est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y,col="red",pch=19)
pts
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- rbind(lapply(seq(3,n-3,by=1), function(i) est_poly(c(x[i],x[i+1]), c(y[i],y[i+1]), slopes[(i-2):(i-1)],n=5)))
# est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y,col="red",pch=19)
pts
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- lapply(seq(3,n-3,by=1), function(i) est_poly(c(x[i],x[i+1]), c(y[i],y[i+1]), slopes[(i-2):(i-1)],n=5))
# est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y,col="red",pch=19)
pts
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- do.call(rbind, lapply(seq(3,n-3,by=1), function(i) est_poly(c(x[i],x[i+1]), c(y[i],y[i+1]), slopes[(i-2):(i-1)],n=5)))
# est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y,col="red",pch=19)
pts
x <- akima_data[,1]; y <- akima_data[,2];
n <- length(x)
x <- sort(x); y <- sapply(1:n, function(i) akima_data[which(akima_data[,1]==x[i]),2])
# compute slope for x[3], x[4], ... x[n-2]
slopes <- sapply(seq(3,n-2,by=1), function(i)
compute_slopes(x[(i-2):(i+2)], y[(i-2):(i+2)]))
pts <- do.call(rbind, lapply(seq(3,n-3,by=1), function(i) est_poly(c(x[i],x[i+1]), c(y[i],y[i+1]), slopes[(i-2):(i-1)],n=5)))
# est_poly(c(x[3],x[4]),c(y[3],y[4]),slopes[1:2],n=5)
plot(x,y,col="red",pch=19)
lines(pts)
plot(x,y,col="red",pch=19)
lines(pts)
data <- readRDS("../data/assignment01.rds")
akima_data <- data$akima_data
artist_data <- data$artist_data
artist_data
str(artist_data)
head(artist_data)
str_detect_all(artist_data$dates,".born.")
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
str_detect_all(artist_data$dates,".born.")
str_detect(artist_data$dates,".born.")
str_detect(artist_data$dates,"born")
str_view_all(artist_data$dates,"born")
str_view_all(artist_data$dates,"died")
str_view(artist_data$dates,"died")
sum(str_detect(artist_data$dates,"died"))
artist_data[which(str_detect(artist_data$dates,"died"))]
artist_data[which(str_detect(artist_data$dates,"died")),]
artist_data[which(str_detect(artist_data$dates,"born")),]
artist_data$dates[which(str_detect(artist_data$dates,"born")),]
artist_data[which(str_detect(artist_data$dates,"born")),c("dates")]
artist[628,]
artist_data[628,]
summary(artist_data$placeOfBirth)
unique(artist_data$placeOfBirth)
unique(artist_data$placeOfBirth)[1]
unique(artist_data$placeOfBirth)[2]
unique(artist_data$placeOfBirth)[:10]
unique(artist_data$placeOfBirth)[1:10]
unique(artist_data$placeOfBirth)[11:20]
str_extract_all(artist_data$placeOfBirth, "(\\w+)+(?<=, )")
str_extract_all(artist_data$placeOfBirth, "(?<=, )+(\\w+)")
str_split(artist_data$placeOfBirth, ", ")
str_trim(str_split(artist_data$placeOfBirth, ", "))
lapply(str_split(artist_data$placeOfBirth, ", "),str_trim)
summary(artist_data)
lapply(str_split(artist_data$placeOfBirth, ","),str_trim)
sapply(lapply(str_split(artist_data$placeOfBirth, ","),str_trim), `[`(2))
str_detect(artist_data$dates, "c")
artist_data[str_detect(artist_data$dates, "c")]
artist_data[str_detect(artist_data$dates, "c"),]
artist_data[str_detect(artist_data$dates, "c"),c("dates")]
knitr::opts_chunk$set(echo = TRUE)
fnames <- list.files("../data/ieer", pattern="^[^R]", full.names=TRUE)
fnames
?about_search_regex
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
fnames <- list.files("../data/ieer", pattern="^[^R]", full.names=TRUE)
fnames
str_splt(fnames, "/")
str_split(fnames, "/")
str_split(fnames,"/")
test <- readLines(fnames[1])
test
test[1]
head(test)
str_detect_all(test, "<DATE_TIME>")
str_detect(test, "<DATE_TIME>")
test[str_detect(test, "<DATE_TIME>")]
sapply(str_split(fnames,"/"), function(x) x[4])
?str_subset
?str_extract
?regex_search
??regex_search
??regex
?regex_search_help
library(stringr, tidyverse, dplyr)
fnames <- list.files("../data/ieer", pattern="^[^R]", full.names=TRUE)
?about_search_regex
basename2 <- str_extract_all(fnames, "\\w(?<=ieer/)")
basename2
fnames
str_extract_all(fnames, "ieer")
str_extract_all(fnames, "(?<=ieer)")
str_extract_all(fnames, "\\w+(?<=ieer)")
str_extract_all(fnames, "\\w+(?<=ieer/)")
str_extract_all(fnames, "[\S++]+(?<=ieer/)")
str_extract_all(fnames, "[++]+(?<=ieer/)")
str_extract_all(fnames, "[\p+]+(?<=ieer/)")
vignette("stringr")
?str_extract_all
fnames
str_sub(4)
str_sub(fnames,4)
str_sub(fnames,13)
str_sub(fnames,14)
str_extract_all(fnames, "[\\w]+(?<=data/ieer)")
str_extract_all(fnames, "[\\w]+(?<='data/ieer')")
str_extract_all(fnames, "(?<=data/ieer)")
str_extract_all(fnames, "(?<=data/ieer)\\w")
?about_search_regex
str_extract_all(fnames, "\\w(?<=data/ieer/)")
str_extract_all(fnames, "[\D \d]+(?<=data/ieer/)")
str_extract_all(fnames, "[\D\d]+(?<=data/ieer/)")
str_extract_all(fnames, "[0-9A-Z]+(?<=data/ieer/)")
str_extract_all(fnames, "[A-Z]+(?<=data/ieer/)")
str_extract_all(fnames, "[a-zA-Z]+(?<=data/ieer/)")
str_extract_all(fnames, "[\\d\\D]+(?<=data/ieer/)")
str_extract_all(fnames, "[\\d\\D]+(?=data/ieer/)")
str_extract_all(fnames, "[\\d\\D]+(?<=data/ieer/)")
str_extract_all(fnames, "[\\S]+(?<=data/ieer/)")
```{r import}
basename1 <- sapply(str_split(fnames,"/"), function(x) x[4])
basename2 <- str_sub(fnames,14)
dir <- sapply(str_split(fnames,"/"), function(x) c(x[3],x[4]))
library(stringr, tidyverse, dplyr)
fnames <- list.files("../data/ieer", pattern="^[^R]", full.names=TRUE)
str_extract_all(fnames, "[\\S]+(?<=data/ieer/)")
dir
str_subset(basename1,"[\\d]{4}04[\\d]{2}")
knitr::opts_chunk$set(echo = TRUE)
file1 <- readLines(fnames[1])
head(file1)
file1[10:20]
file1[11:20]
str_detect(file1,"<DOC>")
install.packages("dplyr")
str_subset(file1, "<DOC>")
library(stringr, dplyr)
fnames <- list.files("../data/ieer", pattern="^[^R]", full.names=TRUE)
str_subset(file1, "<DOC>")
str_sub(file1, "<DOC>")
?str_sub
?str_subset
str_subset(file1,"<DOC>")
str_subset(file1,"DOC")
?about_search_regex
?writeLines
head(file1)
knitr::opts_chunk$set(echo = TRUE)
library(stringr, dplyr, rebus)
basename1 <- sapply(str_split(fnames,"/"), function(x) x[4])
install.packages("rebus")
library(stringr, dplyr, rebus)
library(stringr)
library(rebus)
library(stringr)
library(rebus)
library(dplyr)
fnames <- list.files("../data/ieer", pattern="^[^R]", full.names=TRUE)
basename1 <- sapply(str_split(fnames,"/"), function(x) x[4])
basename2 <- str_sub(fnames,14)
dir <- sapply(str_split(fnames,"/"), function(x) c(x[3],x[4]))
apr_files1 <- str_subset(basename1,"[\\d]{4}04[\\d]{2}")
file1 <- readLines(fnames[1])
head(file1)
str_subset(file1, "body")
str_subset(file1, "BODY")
str_subset(file1, "DOC")
str_subset(file1, "<DOC>")
?about_search_regex
str_subset(file1, "<DOCNO>")
str_trim(str_replace(str_subset(file1, "<DOCNO>"), "<DOCNO>"))
str_trim(str_replace(str_subset(file1, "<DOCNO>"), "<DOCNO>", ""))
str_trim(str_replace_all(str_subset(file1, "<DOCNO>"), "<DOCNO>", ""))
str_trim(str_replace_all(str_subset(file1, "<DOCNO>"), or("<DOCNO>", "</DOCNO>"), ""))
str_match_all(file1, "<+>")
str_subset(file1, "<+>")
str_subset(file1, "[<>]")
str_subset(file1, "DATE")
str_subset(file1, ".DATE.")
str_subset(file1, "DOCDATE")
str_subset(file1, "DOC_DATE")
str_subset(file1, "DATE_TIME")
str_extract(fnames, "[^/]+$")
a <- "i luv dsa2101"
str_extract(a, "luv+")
str_extract(a, "luv+$")
str_extract(a, "[^luv]+$")
str_extract(a, "[^luv ]+$")
str_extract(file1, "[^<DATE_TIME>]+[^</
DATE_TIME>]$")
str_extract_all(file1, "[^<DATE_TIME>]+[^</
DATE_TIME>]$")
str_extract(file1, "[^<DATE_TIME>]+[^</
DATE_TIME>]$")
head(file1)
str_extract(file1, "[^<DATE_TIME>]+[^</DATE_TIME>]$")
file1 <- readLines(fnames[1])
start_end <- str_which(file1, "<?/DOC>")
start_end
file1 <- readLines(fnames[1])
start_end <- str_which(file1, "</?DOC>")
start_end
str_extract(file1, "(?<=<DATE_TIME>)")
str_extract(file1, "(?=<DATE_TIME>)")
str_extract(file1, "(?<=<DATE_TIME>)")
str_extract(file1, "(?<=<DATE_TIME>)$")
str_extract(file1, "(?<=<DATE_TIME>)+")
str_extract(file1, "\\d(?<=<DATE_TIME>)")
str_extract(file1, "(?<=<DATE_TIME>)\\s+(?=</DATE_TIME>)")
str_extract(file1, "(?<=<DATE_TIME>)\\S+(?=</DATE_TIME>)")
str_extract(file1, "(?<=<DATE_TIME>)\\S+(?= +</DATE_TIME>)")
str_extract(file1, "(?<=<DATE_TIME>)[\\S]+(?= +</DATE_TIME>)")
str_extract(file1, "^(?<=<DATE_TIME>)[\\S]+(?= +</DATE_TIME>)$")
str_extract(file1, "(?<=DATE_TIME>)[\\S]+(?= +</DATE_TIME>)")
str_extract(file1, "(?<=DATE_TIME>)[\\S]+(?= +</DATE_TIME>$)")
str_extract(file1, "(?<=DATE_TIME> )[\\S]+(?= +</DATE_TIME>$)")
str_extract(file1, "(?<=DATE_TIME> )[0-9?:]+(?= +</DATE_TIME>$)")
str_extract(file1, "(?<=DATE_TIME> )[0-9/:]+(?= +</DATE_TIME>$)")
str_extract(file1, "(?<=DATE_TIME> )[\\S]+(?= +</DATE_TIME>$)")
str_extract(file1, "(?<=DATE_TIME> )[0-9/:]+(?= +</DATE_TIME>$)")
?rm.na
?na.rm
?is.na
?na_rm
str_extract(file1, "(?<=DATE_TIME> )[0-9/:]+(?= +</DATE_TIME>$)")
str_extract(file1, "(?<=DATE_TIME> ).+(?= +</DATE_TIME>$)")
str_extract(file1, "(?<=DATE_TIME> )[0-9/: ]+(?= +</DATE_TIME>$)")
str_extract(file1, "(?<=DATE_TIME> )[\\S ]+(?= +</DATE_TIME>$)")
str_match("abcdefg", "a")
library(stringr)
str_match("abcdefg", "a")
str_match("abcdefg", "[:alnum]")
str_match_all("abcdefg", "[:alnum]")
str_match(c("abcdefg", "235", "adad"), "[:alnum]")
str_match(c("abcdefg", "235", "adad"), "[:alnum:]")
str_match_all(c("abcdefg", "235", "adad"), "[:alnum:]")
str_match(c("abcdefg", "235", "adad"), "[a]")
str_match(c("abcdefg", "235", "adad"), "[ab]")
str_match(c("abcdefg", "235", "adad"), "[a2]")
?str_match
str_match(c("abcdefg", "235", "adad"), "(a)(2)")
str_match(c("abcdefg", "235", "adad"), "(a?)(2?)")
library(rebus)
library(stringr)
?rebus
a <- "AAA BBB AWDADWAW WDA WD AWD AWDAWAWFJFOAFJOAJ A JD JAWDO JAWOD AJ"
a
one_or_more(WRD)
wrd(1, Inf)
str_view_all(a, "\w+")
str_view_all(a, "\\w+")
str_view_all(a, one_or_more(WRD) %R% "ING")
a <- "I FUCKING HATE FUCKING"
str_view_all(a, one_or_more(WRD) %R% "ING")
one_or_more(WRD) %R% "ING"
?about_search_regex
?Unicode
library(stringr)
library(stringi)
?str_view
a <- "ALGERNON. YEET. JESUS. F."
str_view(a, "^\\w+\.$", match=TRUE)
str_view(a, "^\\w+.$", match=TRUE)
str_view(a, "^\\w+.$")
library(rebus)
str_view(a, "^\\w+$")
str_view(a, "^\\w+")
str_view(a, "^\\w+.")
?rm,na
?rm.na
??na
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(rebus)
library(dplyr)
fnames <- list.files("../data/ieer", pattern="^[^R]", full.names=TRUE)
fnames
install.packages("mongolite")
library(jsonlite)
credentials <- paste0(readLines("mongo_user_pwd.txt", warn=FALSE), collapse=":")
connection_string <- paste0("mongodb://",credentials, "@rshiny.nus.edu.sg:2717/test")
con2 <- mongo(verbose=TRUE, collection="restaurants", url=connection_string)
#### CONNECT TO MONGO DB SHIT
library(mongolite)
library(jsonlite)
# eXXXXX:pwd
credentials <- paste0(readLines("mongo_user_pwd.txt", warn=FALSE), collapse=":")
connection_string <- paste0("mongodb://",credentials, "@rshiny.nus.edu.sg:2717/test")
con2 <- mongo(verbose=TRUE, collection="restaurants", url=connection_string)
imda_url <- "https://data.gov.sg/dataset/02c1f624-489f-40ad-8fdd-5e66e46b2722/download"
return_val <- download.file(imda_url, "../data/imda_data.zip")
imda_url <- "https://data.gov.sg/dataset/02c1f624-489f-40ad-8fdd-5e66e46b2722/download"
return_val <- download.file(imda_url, "../data/imda_data.zip")
con <- unz("../data/imda_data.zip", "wage-02-size2-annual.csv")
wages_data <- read.csv(con, header=TRUE)
head(wages_data)
install.packages("tidyverse")
## API stuff
library(httr)
install.packages("httr")
## API stuff
library(httr)
install.packages("curl")
install.packages("httr")
## API stuff
library(httr)
set_config(verbose())
url <- "https://api.data.gov.sg/v1/transport/taxi-availability"
taxi_avail <- GET(url, query=list(date_time="2022-08-01T09:00:00"))
taxi_data <- content(taxi_avail)
str(taxi_data)
?str
str(taxi_data, max.level=3)
taxi_data$features$[[1]]
taxi_data$features$[1]
str(taxi_data$features[[1]])
str(taxi_data$features[[1]], max.level=3)
str(taxi_data$features[[1]]$geometry$coordinates, max.level=3)
coords <- taxi_data$features[[1]]$geometry$coordinates
sapply(coords, function(x) {c(x[[1]], x[[2]])})
matrix <- sapply(coords, function(x) {c(x[[1]], x[[2]])})
plot(matrix[1,], matrix[2,])
?pch
??pch
plot(matrix[1,], matrix[2,], pch="+")
Sys.Date()
Sys.DateTime()
?`date-time`
?system.time
system.time
Sys.time()
class(Sys.time)
class(Sys.time())
strftime(Sys.time(), "%Y-%m-%dT%H:%M%S")
library(httr)
set_config(verbose())
url <- "https://api.data.gov.sg/v1/transport/taxi-availability"
curr_time <- strftime(Sys.time(),"%Y-%m-%dT%H:%M:%S")
taxi_avail <- GET(url, query=list(date_time=curr_time))
taxi_data <- content(taxi_avail)
coords <- taxi_data$features[[1]]$geometry$coordinates
matrix <- sapply(coords, function(x) {c(x[[1]], x[[2]])})
plot(matrix[1,], matrix[2,], pch="+")
library(httr)
set_config(verbose())
url <- "https://api.data.gov.sg/v1/transport/taxi-availability"
curr_time <- strftime(Sys.time(),"%Y-%m-%dT%H:%M:%S")
taxi_avail <- GET(url, query=list(date_time=curr_time))
taxi_data <- content(taxi_avail)
coords <- taxi_data$features[[1]]$geometry$coordinates
matrix <- sapply(coords, function(x) {c(x[[1]], x[[2]])})
plot(matrix[1,], matrix[2,], pch="+")
curr_time
library(httr)
set_config(verbose())
url <- "https://api.data.gov.sg/v1/transport/taxi-availability"
curr_time <- strftime(Sys.time(),"%Y-%m-%dT%H:%M:%S")
taxi_avail <- GET(url, query=list(date_time=curr_time))
taxi_data <- content(taxi_avail)
coords <- taxi_data$features[[1]]$geometry$coordinates
matrix <- sapply(coords, function(x) {c(x[[1]], x[[2]])})
plot(matrix[1,], matrix[2,], pch="+")
hist(rnorm(1000))
hist(rnorm(10000))
hist(rnorm(10000),breaks=20)
hist(rnorm(10000),breaks=30)
hist(rnorm(10000),breaks=40)
heatmap(rnorm(1000))
heatmap(matrix(rnorm(10000),nrow=100))
heatmap(matrix(rnorm(100),nrow=10))
?heatmap
heatmap(matrix(rnorm(100),nrow=10), Rowv=NA, Colv=NA)
x <- rnorm(1000)
y <- rnorm(1000)
plot(x,y, col=rgb(0,0,0,alpha=0.5))
plot(x,y, col=rgb(0,0,0,alpha=0.5), pch=1)
plot(x,y, col=rgb(0,0,0,alpha=0.5), pch=0)
plot(x,y, col=rgb(0,0,0,alpha=0.5), pch=5)
plot(x,y, col=rgb(0,0,0,alpha=0.5), pch=10)
example(pch)
plot(x,y, col=rgb(0,0,0,alpha=0.5), pch=20)
length(x)
length(y)
x <- rnorm(x)
x
library(mongolite)
library(jsonlite)
# eXXXXX:pwd
credentials <- paste0(readLines("mongo_user_pwd.txt", warn=FALSE), collapse=":")
connection_string <- paste0("mongodb://",credentials, "@rshiny.nus.edu.sg:2717/test")
con2 <- mongo(verbose=TRUE, collection="restaurants", url=connection_string)
con2$count()
